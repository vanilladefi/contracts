/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  VanillaV1API01,
  VanillaV1API01Interface,
} from "../VanillaV1API01";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimeDeadline",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimeDeadline",
        type: "uint256",
      },
    ],
    name: "depositAndBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numEth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numTokensSold",
        type: "uint256",
      },
    ],
    name: "estimateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "profitablePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "htrs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vpc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenRewarded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveLimit",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numEthLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimeDeadline",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numEthLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimeDeadline",
        type: "uint256",
      },
    ],
    name: "sellAndWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenPriceData",
    outputs: [
      {
        internalType: "uint256",
        name: "ethSum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenSum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightedBlockSum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vnlContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "wethReserves",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class VanillaV1API01__factory {
  static readonly abi = _abi;
  static createInterface(): VanillaV1API01Interface {
    return new utils.Interface(_abi) as VanillaV1API01Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanillaV1API01 {
    return new Contract(address, _abi, signerOrProvider) as VanillaV1API01;
  }
}
