/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  VanillaV1Constants02,
  VanillaV1Constants02Interface,
} from "../VanillaV1Constants02";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "AllowanceExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "amountReceived",
        type: "int256",
      },
    ],
    name: "InvalidSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniswapState",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWethAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NoTokenPositionFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "SlippageExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "balance",
        type: "uint112",
      },
    ],
    name: "TokenBalanceExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyTradesPerBlock",
    type: "error",
  },
  {
    inputs: [],
    name: "TradeExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "invalidVersion",
        type: "address",
      },
    ],
    name: "UnapprovedMigrationTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedCallback",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedDelegateCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedReentrantAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedValueSent",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "UninitializedUniswapPool",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTradingParameters",
    type: "error",
  },
];

export class VanillaV1Constants02__factory {
  static readonly abi = _abi;
  static createInterface(): VanillaV1Constants02Interface {
    return new utils.Interface(_abi) as VanillaV1Constants02Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanillaV1Constants02 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VanillaV1Constants02;
  }
}
